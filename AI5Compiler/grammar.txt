

<program> = [{<include>|<directive>}], <block>, "eof"
<block> = [{<statement>,("newline")}]
<if> = "if", <expression>, "then", ("newline", [<block>], [{<elseif>}], [<else>], "endif")|<statement>
<elseif> = "elseif", <expression>, "then", "newline",[<block>]
<else> = "else", "newline", <block>
<while> = "while", <expression>, "newline", [<block>], "wend"
<for> = "for",<identifier>,(<forin>|<forto>),"newline",[<block>],"next"
<forin> = "in", <expression>
<forto> = "=", <expression> "to", <expression>, ["step", <expression>]
<dountil> = "do", "newline",[<block>],"until", <expression>
<switch> = "switch", <expression>,"newline",{<switchcase>}, "endswitch"
<switchchase> = "case",<switchcondition>,{",",<switchcondition>},"newline",[<block>]
<switchcondition> = <expression>,["to",<expression>]
<select> = "select", "newline", {<selectcase>}, "endselect"
<selectcase> = "case",<expression>,"newline",<block>
<function> = "func",<identifier>,<argument list>,"newline",[<block>], "endfunc", "newline"
<argument list> = "(",<argument>,{",",<argument>} ")"
<argument> = [["byref"], <identifier>, ["=",<terminal>]]
<statement> = <if>|<enum>|<return>|<exit>|<continueloop>|<exitloop>|<while>|<for>|<switch>|<select>|<function>|<declaration>|<line statement>
<line statement> = <identifier>,{<qualifier>}, [<assignment>]
<declaration> = (("local",["const"])|("dim",["const"])|("global",["const"])|"const"),(<enum>|(<declaration assignment>,{",",<declaration assignment>})
<declaration assignment> = <identifier>,["=",<expression>]
<assignment> = <assignment operator>, <expression>
<list indexing> = '[',<expression>,']'
<call> = '(',[<expression>,[",",<expression>]]')'
<expression> = <factor>,{<binary operator>, <factor>}
<unary operator> = "-"|"not"
<binary operator> = "and"|"or"|"<="|">="|"<>"|"<"|">"|"=="|"="|"&"|"+"|"-"|"*"|"/"|"^"
<factor> = [<unary operator>],(<terminal>|'(',<expression>,')'|<inline list>){<qualifier>}
<terminal> = "true"|"false"|<macro>|<identifier>|<integer>|<string>|<floating>
<assignment operator> = "="|"+="|"-="|"/="|"*="|"&="
<property> = ".",<identifier>
<inline list> = "[",[<expression>,{",",<expression>}],"]"
<qualifier> = <property>|<call>|<list indexing>
<exit> = "exit"
<exitloop> = "exitloop", [<integer>]
<continueloop> = "continueloop", [<integer>]
<return> = "return", [<expression>]
<with> = "with", <expression>, "newline", {".", <line statement>, "newline"}, "endwith"
<redim> = "redim",<terminal>,{<qualifier>}
<enum> = "enum", ["step", ["+"|"-"|"*"], <integer>], <enum constant>{",",<enum constant>}
<enum constant> = <identifier>,[<assignment>]